<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>org.example</groupId>
  <artifactId>Cucumber2025</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Cucumber2025</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>21</maven.compiler.source>
    <maven.compiler.target>21</maven.compiler.target>


    <!-- plugins versions -->
<!--    <maven.compiler.version>3.14.0</maven.compiler.version>-->
<!--    <maven.dependency.version>3.6.0</maven.dependency.version>-->
<!--    <maven.jar.version>3.3.0</maven.jar.version>-->
<!--    <maven.surefire.version>3.14.0</maven.surefire.version>-->
<!--    <maven.resources.plugin>3.3.1</maven.resources.plugin>-->
    <!-- output directory -->
<!--    <package.directory>${project.build.directory}/docker-resources</package.directory>-->
  </properties>

  <dependencies>
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-java</artifactId>
      <version>7.27.2</version>
    </dependency>

<!--    to use build in parallel execution of junit 5 we will have to comement below-->
<!--    <dependency>-->
<!--      <groupId>io.cucumber</groupId>-->
<!--      <artifactId>cucumber-junit</artifactId>-->
<!--      <version>7.27.2</version>-->
<!--    </dependency>-->


    <!-- Use JUnit 5 platform engine instead of the old JUnit 4 runner -->
    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-junit-platform-engine</artifactId>
      <version>7.27.2</version>
      <scope>test</scope>
    </dependency>

    <!-- JUnit 5 core engine -->
    <dependency>
      <groupId>org.junit.platform</groupId>
      <artifactId>junit-platform-suite</artifactId>
      <version>1.11.0</version>
      <scope>test</scope>
    </dependency>



    <dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>4.35.0</version>
  </dependency>

    <dependency>
      <groupId>tech.grasshopper</groupId>
      <artifactId>extentreports-cucumber7-adapter</artifactId>
      <version>1.14.0</version>
      <scope>test</scope>
    </dependency>

    <!-- Extent Reports Core -->
    <dependency>
      <groupId>com.aventstack</groupId>
      <artifactId>extentreports</artifactId>
      <version>5.1.1</version>
    </dependency>

    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.18.34</version> <!-- or latest -->
      <scope>provided</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi</artifactId>
      <version>5.2.3</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/org.apache.poi/poi-ooxml -->
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>5.2.3</version>
    </dependency>


    <!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.11.0</version>
    </dependency>

    <!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.12.0</version>
    </dependency>

    <dependency>
      <groupId>io.cucumber</groupId>
      <artifactId>cucumber-picocontainer</artifactId>
      <version>7.17.0</version>
      <scope>test</scope>
    </dependency>


  </dependencies>


  <build>
  <plugins>
<!--    <finalName>selenium-docker</finalName>-->
<!--    <plugins>-->
<!--      &lt;!&ndash; To compile the source code using specific java version. also to force IDE to change the settings &ndash;&gt;-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-compiler-plugin</artifactId>-->
<!--        <version>${maven.compiler.version}</version>-->
<!--        <configuration>-->
<!--          <release>21</release>-->
<!--        </configuration>-->
<!--      </plugin>-->
      <!-- To run the tests using specific parameters, change thread count, testng report output directory etc -->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-surefire-plugin</artifactId>-->
<!--        <version>${maven.surefire.version}</version>-->
<!--        <configuration>-->
          <!-- mvn clean test -Dbrowser=chrome -Dselenium.grid.enabled=true -->
<!--          <systemPropertyVariables>-->
<!--            <browser>firefox</browser>-->
<!--            <selenium.grid.enabled>true</selenium.grid.enabled>-->
<!--          </systemPropertyVariables>-->
<!--          <suiteXmlFiles>-->
<!--            <file>src/test/resources/test-suites/vendor-portal.xml</file>-->
<!--            <file>src/test/resources/test-suites/flight-reservation.xml</file>-->
<!--          </suiteXmlFiles>-->
<!--          <threadCount>4</threadCount>-->
<!--          <reportsDirectory>target/test-output</reportsDirectory>-->
<!--        </configuration>-->
<!--      </plugin>-->
      <!-- To copy all the dependencies to run our tests as part of "mvn package" -->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-dependency-plugin</artifactId>-->
<!--        <version>${maven.dependency.version}</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <id>copy-dependencies</id>-->
<!--            <phase>prepare-package</phase>-->
<!--            <goals>-->
<!--              <goal>copy-dependencies</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <outputDirectory>-->
<!--                ${package.directory}/libs-->
<!--              </outputDirectory>-->
<!--            </configuration>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
<!--      &lt;!&ndash; To package our page objects, test classes into jar &ndash;&gt;-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-jar-plugin</artifactId>-->
<!--        <version>${maven.jar.version}</version>-->
<!--        <configuration>-->
<!--          <outputDirectory>${package.directory}/libs</outputDirectory>-->
<!--        </configuration>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <goals>-->
<!--              <goal>test-jar</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <includes>**/*.class</includes>-->
<!--            </configuration>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->
<!--      &lt;!&ndash; To copy resources into the output directory &ndash;&gt;-->
<!--      <plugin>-->
<!--        <groupId>org.apache.maven.plugins</groupId>-->
<!--        <artifactId>maven-resources-plugin</artifactId>-->
<!--        <version>${maven.resources.plugin}</version>-->
<!--        <executions>-->
<!--          <execution>-->
<!--            <id>copy-resources</id>-->
<!--            <phase>prepare-package</phase>-->
<!--            <goals>-->
<!--              <goal>copy-resources</goal>-->
<!--            </goals>-->
<!--            <configuration>-->
<!--              <outputDirectory>${package.directory}</outputDirectory>-->
<!--              <resources>-->
<!--                <resource>-->
<!--                  <directory>src/test/resources</directory>-->
<!--                </resource>-->
<!--              </resources>-->
<!--            </configuration>-->
<!--          </execution>-->
<!--        </executions>-->
<!--      </plugin>-->



      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.14.0</version>
        <configuration>
          <includes>
            <include>**/Runner*.java</include>
          </includes>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.5.3</version>
        <configuration>
          <parallel>methods</parallel>
          <threadCount>10</threadCount>
        </configuration>
      </plugin>
    </plugins>

      </build>
  <profiles>
    <profile>
      <id>chrome</id>
      <properties>
        <browser>chrome</browser>
        <execution>cloud</execution>
      </properties>
    </profile>

    <profile>
      <id>firefox</id>
      <properties>
        <browser>firefox</browser>
        <execution>cloud</execution>
      </properties>
    </profile>

    <profile>
      <id>edge</id>
      <properties>
        <browser>edge</browser>
        <execution>cloud</execution>
      </properties>
    </profile>
  </profiles>
</project>
